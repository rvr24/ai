def greedy(x):
return x[1]
q=[]
def best_first(graph,node,goal):
visited=[]
queue=[]
visited.append((node,h[node]))
queue.append((node,h[node]))
while queue:
t=queue.pop(0)
q.append(t)
print(t,end=" ")
if(t[0]==goal):
print("\n found")
return
for n in graph [t[0]]:
if(n,h[n]) not in visited:
visited.append((n,h[n]))
queue.append((n,h[n]))
queue.sort(key=greedy)
graph={'a':['b','c'],'b':['d','e','f'],'c':['g','h','i','j'],'h':['c','
i']}
h={'a':8,'b':10,'c':4,'d':15,'e':14,'f':12,'g':7,'h':2,'i':0,'j':4}
pc={'a':{'b':1,'c':2},'b':{'d':7,'e':9,'f':5},'c':{'g':4,'h':3,'i':6,'j
':8},'h':{'c':3,'j':1}}
best_first(graph,'a','i')
pcost=0
for i in range(len(q)-1):
pcost+=pc[q[i][0]][q[i+1][0]]
print("path cost is:",pcost)
