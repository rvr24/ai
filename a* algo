def second(x):
    return x[1]
q=[]
def a(graph,node,goal,pc):
    visited=[]
    queue=[]
    visited.append((node,h[node]))
    queue.append((node,h[node]))
    while queue:
        t=queue.pop(0)
        q.append(t)
        print(t, end=" ")
        if t[0]==goal:
            print("\nfound")
            return
        for neighbor in graph[t[0]]:
            k=pc[t[0]][neighbor]+h[neighbor]
            if (neighbor,k) not in visited:
                visited.append((neighbor,k))
                queue.append((neighbor,k))
        queue.sort(key=second)

if __name__ == '__main__':
    graph = {'A': ["B", "C"], 'B': ["D", "E", "F"], 'C': ['G', 'H', 'I', 'J'], "H": ['C', 'I']}
    h = {'A': 8, 'B': 10, 'C': 4, 'D': 15, 'E': 14, 'F': 12, 'G': 7, "H": 2, 'I': 0, 'J': 4}
    pc = {'A': {"B": 1, "C": 2}, 'B': {"D": 7, "E": 9, "F": 5}, 'C': {'G': 4, 'H': 3, 'I': 6, 'J': 8}, "H": {'C': 3, 'I': 1}}
    a(graph, 'A', 'I', pc)
    pcost = 0
    for i in range(len(q) - 1):
        pcost += pc[q[i][0]][q[i + 1][0]]
    print("path cost is", pcost)
